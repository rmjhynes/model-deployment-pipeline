---
name: Release

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/go-calculator:ci-${{ github.sha }}

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5

      - name: Install dependencies
        run: |
          go mod download
          go mod verify

      - name: Build
        run: go build -v ./...

      - name: Test with the Go CLI
        run: go test -v ./...

      - name: Build image and tag with git commit hash
        run: docker build -t {{ env.IMAGE_NAME }} .

      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image to GitHub Container Registry
        run: docker push {{ env.REGISTRY }}/{{ env.IMAGE_NAME }}

  secure:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull the image for integration tests
        run: docker pull {{ env.REGISTRY }}/{{ env.IMAGE_NAME }}

      - name: Generate SBOM
        uses: aquasecurity/trivy-action@0.28.0
        with:
          format: 'spdx-json'
          output: 'sbom.json'
          image-ref: '{{ env.IMAGE_NAME }}'

      - name: Scan SBOM
        uses: aquasecurity/trivy-action@0.28.0
        with:
          input: sbom.json
          severity: 'CRITICAL,HIGH'

  test:
    runs-on: ubuntu-latest
    needs: [build, secure]
    steps:
      - name: Install dependencies
        run: pip install testcontainers[postgres]
