---
name: Release

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: go-calculator
  IMAGE_TAG: ci-${{ github.sha }}

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5

      - name: Install dependencies
        run: |
          go mod download
          go mod verify

      - name: Build
        run: go build -v ./...

      - name: Test with the Go CLI
        run: go test -v ./...

      - name: Build image and tag with git commit hash
        run: docker build -t ${{ env.IMAGE_NAME }} .

      - name: Save Docker image as tar file
        run: docker save ${{ env.IMAGE_NAME }} -o ${{ env.IMAGE_NAME }}.tar
        
      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ${{ env.IMAGE_NAME }}.tar

  secure:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          
      - name: Load Docker image
        run: docker load -i ${{ env.IMAGE_NAME }}.tar
        
      - name: Verify image
        run: docker images

      - name: Generate SBOM
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'image'
          format: 'spdx-json'
          output: 'dependency-results.sbom.json'
          image-ref: '${{ env.IMAGE_NAME }}'
          github-pat: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan SBOM
        uses: aquasecurity/trivy-action@0.28.0
        with:
          input: dependency-results.sbom.json
          severity: 'CRITICAL,HIGH'

  test:
    runs-on: ubuntu-latest
    needs: [build, secure]
    steps:
      - name: Install dependencies
        run: pip install testcontainers[postgres]


